theta =   0,#.05
mu    =   0.02)
parameters_Ragonnet = c(c     =   0.00201,
k     =   0.4015,
e     =   4.015,
q     =   0.5,
tau   =   1,
beta  =   0.006,
m     =   0.03,
w     =   0.4,
theta =   0,#.05
mu    =   0.02)
state = c( S  = 760,
Lf =  20,
Ls = 200,
I =   20,
Pf =   0,
Ps =   0)
derivs=function(t, state, parameters) {
with(as.list(c(state, parameters)),{
N   = S+Lf+Ls+I+Pf+Ps
dS  = -(mu+beta*I)*S+mu*N+m*I                    #(A1)
dLf = beta*I*(S+q*(Ls+Pf+Ps))-(k+e+mu+theta)*Lf  #(A2)
dLs = e*Lf-(q*beta*I+c+mu+theta)*Ls+tau*I       #(A3)
dI  = k*Lf+c*Ls+w*(k*Pf+c*Ps)-(tau+mu+m)*I      #(A4)
dPf = theta*Lf-(q*beta*I+w*k+e+mu)*Pf           #(A5)
dPs = theta*Ls+e*Pf-(q*beta*I+w*c+mu)*Ps        #(A6))
list(c(dS, dLf, dLs, dI, dPf, dPs))
})   # end with(as.list ...
}
times = seq(0,60,0.02)
out1   = as.data.frame(ode(y = state, times = times, func = derivs, parms = parameters_Menzies))
tail(out1)
out2   = as.data.frame(ode(y = state, times = times, func = derivs, parms = parameters_Ragonnet))
tail(out2)
with(as.list(c(out2[3001,],parameters_Ragonnet)),{
incidence = k*Lf+c*Ls
})
incidence
with(as.list(c(out2[3001,],parameters_Ragonnet)),{
k*Lf+c*Ls
})
with(as.list(c(out1[3001,],parameters_Menzies)),{
k*Lf+c*Ls
})
parameters_Menzies = c( c     =   0.000594,
k     =   0.0826,
e     =   0.872,
q     =   0.5,
tau   =   1,
beta  =   0.01,
m     =   0.03,
w     =   0.4,
theta =   0,#.05
mu    =   0.02)
parameters_Ragonnet = c(c     =   0.00201,
k     =   0.4015,
e     =   4.015,
q     =   0.5,
tau   =   1,
beta  =   0.01,
m     =   0.03,
w     =   0.4,
theta =   0,#.05
mu    =   0.02)
state = c( S  = 760,
Lf =  20,
Ls = 200,
I =   20,
Pf =   0,
Ps =   0)
derivs=function(t, state, parameters) {
with(as.list(c(state, parameters)),{
N   = S+Lf+Ls+I+Pf+Ps
dS  = -(mu+beta*I)*S+mu*N+m*I                    #(A1)
dLf = beta*I*(S+q*(Ls+Pf+Ps))-(k+e+mu+theta)*Lf  #(A2)
dLs = e*Lf-(q*beta*I+c+mu+theta)*Ls+tau*I       #(A3)
dI  = k*Lf+c*Ls+w*(k*Pf+c*Ps)-(tau+mu+m)*I      #(A4)
dPf = theta*Lf-(q*beta*I+w*k+e+mu)*Pf           #(A5)
dPs = theta*Ls+e*Pf-(q*beta*I+w*c+mu)*Ps        #(A6))
list(c(dS, dLf, dLs, dI, dPf, dPs))
})   # end with(as.list ...
}
times = seq(0,60,0.02)
out1   = as.data.frame(ode(y = state, times = times, func = derivs, parms = parameters_Menzies))
tail(out1)
out2   = as.data.frame(ode(y = state, times = times, func = derivs, parms = parameters_Ragonnet))
tail(out2)
with(as.list(c(out2[3001,],parameters_Ragonnet)),{
k*Lf+c*Ls
})
with(as.list(c(out1[3001,],parameters_Menzies)),{
k*Lf+c*Ls
})
with(as.list(c(out1[3001,],parameters_Ragonnet)),{
k*Lf+c*Ls
})
with(as.list(c(out2[3001,],parameters_Menzies)),{
k*Lf+c*Ls
})
tail(out1)
with(as.list(c(out1[3001,],parameters_Ragonnet)),{
k*Lf+c*Ls
})
library("deSolve")
parameters_Menzies = c( c     =   0.000594,
k     =   0.0826,
e     =   0.872,
q     =   0.5,
tau   =   1,
beta  =   0.1,
m     =   0.03,
w     =   0.4,
theta =   0,#.05
mu    =   0.02)
parameters_Ragonnet = c(c     =   0.00201,
k     =   0.4015,
e     =   4.015,
q     =   0.5,
tau   =   1,
beta  =   0.1,
m     =   0.03,
w     =   0.4,
theta =   0,#.05
mu    =   0.02)
state = c( S  = 760,
Lf =  20,
Ls = 200,
I =   20,
Pf =   0,
Ps =   0)
derivs=function(t, state, parameters) {
with(as.list(c(state, parameters)),{
N   = S+Lf+Ls+I+Pf+Ps
dS  = -(mu+beta*I/N)*S+mu*N+m*I                    #(A1)
dLf = beta*I/N*(S+q*(Ls+Pf+Ps))-(k+e+mu+theta)*Lf  #(A2)
dLs = e*Lf-(q*beta*I/N+c+mu+theta)*Ls+tau*I       #(A3)
dI  = k*Lf+c*Ls+w*(k*Pf+c*Ps)-(tau+mu+m)*I      #(A4)
dPf = theta*Lf-(q*beta*I/N+w*k+e+mu)*Pf           #(A5)
dPs = theta*Ls+e*Pf-(q*beta*I/N+w*c+mu)*Ps        #(A6))
list(c(dS, dLf, dLs, dI, dPf, dPs))
})   # end with(as.list ...
}
times = seq(0,60,0.02)
out1   = as.data.frame(ode(y = state, times = times, func = derivs, parms = parameters_Menzies))
tail(out1)
library("deSolve")
parameters_Menzies = c( c     =   0.000594,
k     =   0.0826,
e     =   0.872,
q     =   0.5,
tau   =   1,
beta  =   2,
m     =   0.03,
w     =   0.4,
theta =   0,#.05
mu    =   0.02)
parameters_Ragonnet = c(c     =   0.00201,
k     =   0.4015,
e     =   4.015,
q     =   0.5,
tau   =   1,
beta  =   2,
m     =   0.03,
w     =   0.4,
theta =   0,#.05
mu    =   0.02)
state = c( S  = 760,
Lf =  20,
Ls = 200,
I =   20,
Pf =   0,
Ps =   0)
derivs=function(t, state, parameters) {
with(as.list(c(state, parameters)),{
N   = S+Lf+Ls+I+Pf+Ps
dS  = -(mu+beta*I/N)*S+mu*N+m*I                    #(A1)
dLf = beta*I/N*(S+q*(Ls+Pf+Ps))-(k+e+mu+theta)*Lf  #(A2)
dLs = e*Lf-(q*beta*I/N+c+mu+theta)*Ls+tau*I       #(A3)
dI  = k*Lf+c*Ls+w*(k*Pf+c*Ps)-(tau+mu+m)*I      #(A4)
dPf = theta*Lf-(q*beta*I/N+w*k+e+mu)*Pf           #(A5)
dPs = theta*Ls+e*Pf-(q*beta*I/N+w*c+mu)*Ps        #(A6))
list(c(dS, dLf, dLs, dI, dPf, dPs))
})   # end with(as.list ...
}
times = seq(0,60,0.02)
out1   = as.data.frame(ode(y = state, times = times, func = derivs, parms = parameters_Menzies))
tail(out1)
with(as.list(c(out1[3001,],parameters_Ragonnet)),{
k*Lf+c*Ls
})
parameters_Menzies = c( c     =   0.000594,
k     =   0.0826,
e     =   0.872,
q     =   0.5,
tau   =   1,
beta  =   20,
m     =   0.03,
w     =   0.4,
theta =   0,#.05
mu    =   0.02)
parameters_Ragonnet = c(c     =   0.00201,
k     =   0.4015,
e     =   4.015,
q     =   0.5,
tau   =   1,
beta  =   20,
m     =   0.03,
w     =   0.4,
theta =   0,#.05
mu    =   0.02)
state = c( S  = 760,
Lf =  20,
Ls = 200,
I =   20,
Pf =   0,
Ps =   0)
derivs=function(t, state, parameters) {
with(as.list(c(state, parameters)),{
N   = S+Lf+Ls+I+Pf+Ps
dS  = -(mu+beta*I/N)*S+mu*N+m*I                    #(A1)
dLf = beta*I/N*(S+q*(Ls+Pf+Ps))-(k+e+mu+theta)*Lf  #(A2)
dLs = e*Lf-(q*beta*I/N+c+mu+theta)*Ls+tau*I       #(A3)
dI  = k*Lf+c*Ls+w*(k*Pf+c*Ps)-(tau+mu+m)*I      #(A4)
dPf = theta*Lf-(q*beta*I/N+w*k+e+mu)*Pf           #(A5)
dPs = theta*Ls+e*Pf-(q*beta*I/N+w*c+mu)*Ps        #(A6))
list(c(dS, dLf, dLs, dI, dPf, dPs))
})   # end with(as.list ...
}
times = seq(0,60,0.02)
out1   = as.data.frame(ode(y = state, times = times, func = derivs, parms = parameters_Menzies))
tail(out1)
with(as.list(c(out1[3001,],parameters_Ragonnet)),{
k*Lf+c*Ls
})
parameters_Menzies = c( c     =   0.000594,
k     =   0.0826,
e     =   0.872,
q     =   0.5,
tau   =   1,
beta  =   7,
m     =   0.03,
w     =   0.4,
theta =   0,#.05
mu    =   0.02)
parameters_Ragonnet = c(c     =   0.00201,
k     =   0.4015,
e     =   4.015,
q     =   0.5,
tau   =   1,
beta  =   7,
m     =   0.03,
w     =   0.4,
theta =   0,#.05
mu    =   0.02)
state = c( S  = 760,
Lf =  20,
Ls = 200,
I =   20,
Pf =   0,
Ps =   0)
derivs=function(t, state, parameters) {
with(as.list(c(state, parameters)),{
N   = S+Lf+Ls+I+Pf+Ps
dS  = -(mu+beta*I/N)*S+mu*N+m*I                    #(A1)
dLf = beta*I/N*(S+q*(Ls+Pf+Ps))-(k+e+mu+theta)*Lf  #(A2)
dLs = e*Lf-(q*beta*I/N+c+mu+theta)*Ls+tau*I       #(A3)
dI  = k*Lf+c*Ls+w*(k*Pf+c*Ps)-(tau+mu+m)*I      #(A4)
dPf = theta*Lf-(q*beta*I/N+w*k+e+mu)*Pf           #(A5)
dPs = theta*Ls+e*Pf-(q*beta*I/N+w*c+mu)*Ps        #(A6))
list(c(dS, dLf, dLs, dI, dPf, dPs))
})   # end with(as.list ...
}
times = seq(0,60,0.02)
out1   = as.data.frame(ode(y = state, times = times, func = derivs, parms = parameters_Menzies))
tail(out1)
with(as.list(c(out1[3001,],parameters_Ragonnet)),{
k*Lf+c*Ls
})
out2   = as.data.frame(ode(y = state, times = times, func = derivs, parms = parameters_Ragonnet))
tail(out2)
with(as.list(c(out2[3001,],parameters_Menzies)),{
k*Lf+c*Ls
})
parameters_Menzies = c( c     =   0.000594,
k     =   0.0826,
e     =   0.872,
q     =   0.5,
tau   =   1,
beta  =   12,
m     =   0.03,
w     =   0.4,
theta =   0,#.05
mu    =   0.02)
parameters_Ragonnet = c(c     =   0.00201,
k     =   0.4015,
e     =   4.015,
q     =   0.5,
tau   =   1,
beta  =   12,
m     =   0.03,
w     =   0.4,
theta =   0,#.05
mu    =   0.02)
state = c( S  = 760,
Lf =  20,
Ls = 200,
I =   20,
Pf =   0,
Ps =   0)
derivs=function(t, state, parameters) {
with(as.list(c(state, parameters)),{
N   = S+Lf+Ls+I+Pf+Ps
dS  = -(mu+beta*I/N)*S+mu*N+m*I                    #(A1)
dLf = beta*I/N*(S+q*(Ls+Pf+Ps))-(k+e+mu+theta)*Lf  #(A2)
dLs = e*Lf-(q*beta*I/N+c+mu+theta)*Ls+tau*I       #(A3)
dI  = k*Lf+c*Ls+w*(k*Pf+c*Ps)-(tau+mu+m)*I      #(A4)
dPf = theta*Lf-(q*beta*I/N+w*k+e+mu)*Pf           #(A5)
dPs = theta*Ls+e*Pf-(q*beta*I/N+w*c+mu)*Ps        #(A6))
list(c(dS, dLf, dLs, dI, dPf, dPs))
})   # end with(as.list ...
}
times = seq(0,60,0.02)
out1   = as.data.frame(ode(y = state, times = times, func = derivs, parms = parameters_Menzies))
tail(out1)
with(as.list(c(out1[3001,],parameters_Ragonnet)),{
k*Lf+c*Ls
})
out2   = as.data.frame(ode(y = state, times = times, func = derivs, parms = parameters_Ragonnet))
tail(out2)
with(as.list(c(out2[3001,],parameters_Menzies)),{
k*Lf+c*Ls
})
derivs=function(t, state, parameters) {
with(as.list(c(state, parameters)),{
N   = S+Lf+Ls+I+Pf+Ps
if (t<40){
foi = beta*I/N
}else{
foi = 0
}
dS  = -(mu+foi)*S+mu*N+m*I                    #(A1)
dLf = beta*I/N*(S+q*(Ls+Pf+Ps))-(k+e+mu+theta)*Lf  #(A2)
dLs = e*Lf-(q*foi+c+mu+theta)*Ls+tau*I       #(A3)
dI  = k*Lf+c*Ls+w*(k*Pf+c*Ps)-(tau+mu+m)*I      #(A4)
dPf = theta*Lf-(q*foi+w*k+e+mu)*Pf           #(A5)
dPs = theta*Ls+e*Pf-(q*foi+w*c+mu)*Ps        #(A6))
list(c(dS, dLf, dLs, dI, dPf, dPs))
})   # end with(as.list ...
}
times = seq(0,60,0.02)
out1   = as.data.frame(ode(y = state, times = times, func = derivs, parms = parameters_Menzies))
tail(out1)
with(as.list(c(out1[3001,],parameters_Ragonnet)),{
k*Lf+c*Ls
})
out2   = as.data.frame(ode(y = state, times = times, func = derivs, parms = parameters_Ragonnet))
tail(out2)
View(out2)
library("deSolve")
parameters_Menzies = c( c     =   0.000594,
k     =   0.0826,
e     =   0.872,
q     =   0.5,
tau   =   1,
beta  =   12,
m     =   0.03,
w     =   0.4,
theta =   0,#.05
mu    =   0.02)
parameters_Ragonnet = c(c     =   0.00201,
k     =   0.4015,
e     =   4.015,
q     =   0.5,
tau   =   1,
beta  =   12,
m     =   0.03,
w     =   0.4,
theta =   0,#.05
mu    =   0.02)
state = c( S  = 760,
Lf =  20,
Ls = 200,
I =   20,
Pf =   0,
Ps =   0)
derivs=function(t, state, parameters) {
with(as.list(c(state, parameters)),{
N   = S+Lf+Ls+I+Pf+Ps
if (t<40){
foi = beta*I/N
}else{
foi = 0
}
dS  = -(mu+foi)*S+mu*N+m*I                    #(A1)
dLf = foi*(S+q*(Ls+Pf+Ps))-(k+e+mu+theta)*Lf  #(A2)
dLs = e*Lf-(q*foi+c+mu+theta)*Ls+tau*I       #(A3)
dI  = k*Lf+c*Ls+w*(k*Pf+c*Ps)-(tau+mu+m)*I      #(A4)
dPf = theta*Lf-(q*foi+w*k+e+mu)*Pf           #(A5)
dPs = theta*Ls+e*Pf-(q*foi+w*c+mu)*Ps        #(A6))
list(c(dS, dLf, dLs, dI, dPf, dPs))
})   # end with(as.list ...
}
times = seq(0,60,0.02)
out1   = as.data.frame(ode(y = state, times = times, func = derivs, parms = parameters_Menzies))
tail(out1)
with(as.list(c(out1[3001,],parameters_Ragonnet)),{
k*Lf+c*Ls
})
out2   = as.data.frame(ode(y = state, times = times, func = derivs, parms = parameters_Ragonnet))
tail(out2)
with(as.list(c(out2[3001,],parameters_Menzies)),{
k*Lf+c*Ls
})
plot(x=times, y=out2$Lf*parameters_Ragonnet$k+parameters_Ragonnet$c*out2$Ls, type="l",col="red")
parameters_Ragonnet$c
parameters_Ragonnet[["c"]]
parameters_Ragonnet["k"]
plot(x=times, y=out2$Lf*parameters_Ragonnet["k"]+parameters_Ragonnet["c"]*out2$Ls, type="l",col="red")
times = seq(0,60,0.02)
out1   = as.data.frame(ode(y = state, times = times, func = derivs, parms = parameters_Menzies))
tail(out1)
with(as.list(c(out1[3001,],parameters_Ragonnet)),{
k*Lf+c*Ls
})
plot(x=times, y=out1$Lf*parameters_Ragonnet["k"]+parameters_Ragonnet["c"]*out1$Ls, type="l",col="red")
times = seq(0,60,0.02)
out1   = as.data.frame(ode(y = state, times = times, func = derivs, parms = parameters_Menzies))
tail(out1)
with(as.list(c(out1[3001,],parameters_Menzies)),{
k*Lf+c*Ls
})
plot(x=times, y=out1$Lf*parameters_Menzies["k"]+parameters_Menzies["c"]*out1$Ls, type="l",col="red")
out2   = as.data.frame(ode(y = state, times = times, func = derivs, parms = parameters_Ragonnet))
tail(out2)
with(as.list(c(out2[3001,],parameters_Ragonnet)),{
k*Lf+c*Ls
})
out1[2000,]
times = seq(0,60,0.02)
out1   = as.data.frame(ode(y = state, times = times, func = derivs, parms = parameters_Menzies))
tail(out1)
with(as.list(c(out1[2000,],parameters_Menzies)),{
k*Lf+c*Ls
})
plot(x=times, y=out1$Lf*parameters_Menzies["k"]+parameters_Menzies["c"]*out1$Ls, type="l",col="red")
plot(x=times, y=100*(out1$Lf*parameters_Menzies["k"]+parameters_Menzies["c"]*out1$Ls), type="l",col="red")
times = seq(0,60,0.02)
out1   = as.data.frame(ode(y = state, times = times, func = derivs, parms = parameters_Menzies))
tail(out1)
with(as.list(c(out1[2000,],parameters_Menzies)),{
100*(k*Lf+c*Ls)
})
plot(x=times, y=100*(out1$Lf*parameters_Menzies["k"]+parameters_Menzies["c"]*out1$Ls), type="l",col="red")
out2   = as.data.frame(ode(y = state, times = times, func = derivs, parms = parameters_Ragonnet))
tail(out2)
with(as.list(c(out2[2000,],parameters_Ragonnet)),{
100*(k*Lf+c*Ls)
})
plot(x=times, y=100*(out2$Lf*parameters_Ragonnet["k"]+parameters_Ragonnet["c"]*out2$Ls), type="l",col="red")
tail(out1)
parameters_Menzies = c( c     =   0.000594,
k     =   0.0826,
e     =   0.872,
q     =   0.5,
tau   =   1,
beta  =   17,
m     =   0.03,
w     =   0.4,
theta =   0,#.05
mu    =   0.02)
parameters_Ragonnet = c(c     =   0.00201,
k     =   0.4015,
e     =   4.015,
q     =   0.5,
tau   =   1,
beta  =   12,
m     =   0.03,
w     =   0.4,
theta =   0,#.05
mu    =   0.02)
state = c( S  = 760,
Lf =  20,
Ls = 200,
I =   20,
Pf =   0,
Ps =   0)
derivs=function(t, state, parameters) {
with(as.list(c(state, parameters)),{
N   = S+Lf+Ls+I+Pf+Ps
if (t<40){
foi = beta*I/N
}else{
foi = 0
}
dS  = -(mu+foi)*S+mu*N+m*I                    #(A1)
dLf = foi*(S+q*(Ls+Pf+Ps))-(k+e+mu+theta)*Lf  #(A2)
dLs = e*Lf-(q*foi+c+mu+theta)*Ls+tau*I       #(A3)
dI  = k*Lf+c*Ls+w*(k*Pf+c*Ps)-(tau+mu+m)*I      #(A4)
dPf = theta*Lf-(q*foi+w*k+e+mu)*Pf           #(A5)
dPs = theta*Ls+e*Pf-(q*foi+w*c+mu)*Ps        #(A6))
list(c(dS, dLf, dLs, dI, dPf, dPs))
})   # end with(as.list ...
}
times = seq(0,60,0.02)
out1   = as.data.frame(ode(y = state, times = times, func = derivs, parms = parameters_Menzies))
tail(out1)
with(as.list(c(out1[2000,],parameters_Menzies)),{
100*(k*Lf+c*Ls)
})
plot(x=times, y=100*(out1$Lf*parameters_Menzies["k"]+parameters_Menzies["c"]*out1$Ls), type="l",col="red")
View(out2)
